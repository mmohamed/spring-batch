<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<import resource="context.xml" />

	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

	<batch:job id="transformJob">
		<batch:step id="deleteDir" next="cleanDB">
			<batch:tasklet ref="fileDeletingTasklet" />
		</batch:step>
		<batch:step id="cleanDB" next="countThread">
			<batch:tasklet ref="cleanDBTasklet" />
		</batch:step>
		<batch:step id="countThread" next="split">
			<batch:tasklet ref="countThreadTasklet" />
		</batch:step>
		<batch:step id="split" next="partitionerMasterImporter">
			<batch:tasklet>
				<batch:chunk reader="largeCSVReader" writer="smallCSVWriter"
					commit-interval="#{jobExecutionContext['chunk.count']}" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="partitionerMasterImporter" next="partitionerMasterExporter">
			<partition step="importChunked" partitioner="filePartitioner">
				<handler grid-size="10" task-executor="taskExecutor" />
			</partition>
		</batch:step>
		<batch:step id="partitionerMasterExporter" next="concat">
			<partition step="exportChunked" partitioner="dbPartitioner">
				<handler grid-size="10" task-executor="taskExecutor" />
			</partition>
		</batch:step>
		<batch:step id="concat">
			<batch:tasklet ref="concatFileTasklet" />
		</batch:step>
	</batch:job>

	<batch:step id="importChunked">
		<batch:tasklet>
			<batch:chunk reader="smallCSVFileReader" writer="dbWriter"
				processor="importProcessor" commit-interval="500">
			</batch:chunk>
		</batch:tasklet>
	</batch:step>
	
	<batch:step id="exportChunked">
		<batch:tasklet>
			<batch:chunk reader="dbReader" writer="jsonFileWriter"
				processor="exportProcessor" commit-interval="#{jobExecutionContext['chunk.count']}">
			</batch:chunk>
		</batch:tasklet>
	</batch:step>

	<bean id="jsonFileWriter" class="dev.medinvention.writer.PersonWriterToFile"
		scope="step">
		<property name="outputPath" value="#{systemEnvironment['DATA_PATH']}csv/chunked/paged-#{stepExecutionContext[page]}.json" />
	</bean>

	<bean id="dbReader" class="dev.medinvention.reader.PersonReaderFromDataBase" scope="step">
		<property name="iPersonRepository" ref="IPersonRepository" />
		<property name="page" value="#{stepExecutionContext[page]}"/>
		<property name="size" value="#{stepExecutionContext[size]}"/>
	</bean>

	<bean id="countThreadTasklet" class="dev.medinvention.tasklet.CountingTasklet"
		scope="step">
		<property name="input" value="file:#{systemEnvironment['DATA_PATH']}csv/input/#{jobParameters[filename]}" />
	</bean>

	<bean id="cleanDBTasklet" class="dev.medinvention.tasklet.CleanDBTasklet" />

	<bean id="fileDeletingTasklet" class="dev.medinvention.tasklet.FileDeletingTasklet">
		<property name="directory" value="file:#{systemEnvironment['DATA_PATH']}csv/chunked/" />
	</bean>
	
	<bean id="concatFileTasklet" class="dev.medinvention.tasklet.FileConcatTasklet">
		<property name="directory" value="file:#{systemEnvironment['DATA_PATH']}csv/chunked/" />
		<property name="outputFilename" value="#{systemEnvironment['DATA_PATH']}csv/output/export.json" />
	</bean>

	<bean id="filePartitioner" class="dev.medinvention.partitioner.FilePartitioner">
		<property name="outputPath" value="#{systemEnvironment['DATA_PATH']}csv/chunked/" />
	</bean>
	
	<bean id="dbPartitioner" class="dev.medinvention.partitioner.DBPartitioner" scope="step">
		<property name="pageSize" value="#{jobExecutionContext['chunk.count']}" />
	</bean>

	<bean id="largeCSVReader" class="dev.medinvention.reader.LineReaderFromFile"
		scope="step">
		<property name="inputPath" value="#{systemEnvironment['DATA_PATH']}csv/input/#{jobParameters[filename]}" />
	</bean>

	<bean id="smallCSVWriter" class="dev.medinvention.writer.LineWriterToFile"
		scope="step">
		<property name="outputPath" value="#{systemEnvironment['DATA_PATH']}csv/chunked/"></property>
	</bean>

	<bean id="smallCSVFileReader" class="dev.medinvention.reader.PersonReaderFromFile"
		scope="step">
		<constructor-arg value="#{systemEnvironment['DATA_PATH']}csv/chunked/#{stepExecutionContext[file]}" />
	</bean>

	<bean id="importProcessor" class="dev.medinvention.processor.ImportPersonItemProcessor" />

	<bean id="exportProcessor" class="dev.medinvention.processor.ExportPersonItemProcessor" />

	<bean id="dbWriter" class="dev.medinvention.writer.PersonWriterToDataBase">
		<property name="iPersonRepository" ref="IPersonRepository" />
	</bean>

</beans>
